{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"./Text\";\nimport Divider from \"./Divider\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\nimport { useStyles } from \"./hooks/use-styles\";\n\nvar BackdropSubheader = function BackdropSubheader(_ref) {\n  var title = _ref.title,\n      leading = _ref.leading,\n      trailing = _ref.trailing,\n      _ref$divider = _ref.divider,\n      divider = _ref$divider === void 0 ? true : _ref$divider,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'on-surface' : _ref$color,\n      style = _ref.style,\n      contentContainerStyle = _ref.contentContainerStyle,\n      titleContainerStyle = _ref.titleContainerStyle,\n      leadingContainerStyle = _ref.leadingContainerStyle,\n      trailingContainerStyle = _ref.trailingContainerStyle;\n  var palette = usePaletteColor(color);\n  var styles = useStyles(function () {\n    return {\n      container: {\n        marginHorizontal: 16\n      },\n      contentContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingVertical: 12\n      },\n      titleContainer: {\n        flex: 1\n      },\n      leadingContainer: {\n        marginEnd: 16\n      },\n      trailingContainer: {\n        marginStart: 16\n      }\n    };\n  });\n  return React.createElement(View, {\n    style: [styles.container, style]\n  }, React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, !!leading && React.createElement(View, {\n    style: [styles.leadingContainer, leadingContainerStyle]\n  }, typeof leading === 'function' ? leading({\n    color: palette.main,\n    size: 24\n  }) : leading), React.createElement(View, {\n    style: [styles.titleContainer, titleContainerStyle]\n  }, typeof title === 'string' ? React.createElement(Text, {\n    variant: \"subtitle1\",\n    style: {\n      color: palette.main\n    }\n  }, title) : title), !!trailing && React.createElement(View, {\n    style: [styles.trailingContainer, trailingContainerStyle]\n  }, typeof trailing === 'function' ? trailing({\n    color: palette.main,\n    size: 24\n  }) : trailing)), typeof divider === 'boolean' ? divider && React.createElement(Divider, null) : divider);\n};\n\nexport default BackdropSubheader;","map":{"version":3,"sources":["BackdropSubheader.tsx"],"names":["BackdropSubheader","divider","color","trailingContainerStyle","palette","usePaletteColor","styles","useStyles","container","marginHorizontal","contentContainer","flexDirection","alignItems","paddingVertical","titleContainer","flex","leadingContainer","marginEnd","trailingContainer","marginStart","leading","size","main","trailing"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,OAAA,IAAA;AACA,OAAA,OAAA;AACA,SAAA,eAAA;AACA,SAAA,SAAA;;AAwBA,IAAMA,iBAAmD,GAAG,SAAtDA,iBAAsD,CAAA,IAAA,EAWtD;AAXuD,MAAA,KAAA,GAWvD,IAXuD,CAAA,KAAA;AAAA,MAAA,OAAA,GAWvD,IAXuD,CAAA,OAAA;AAAA,MAAA,QAAA,GAWvD,IAXuD,CAAA,QAAA;AAAA,qBAWvD,IAXuD,CAI3DC,OAJ2D;AAAA,MAI3DA,OAJ2D,6BAAA,IAAA;AAAA,mBAWvD,IAXuD,CAK3DC,KAL2D;AAAA,MAK3DA,KAL2D,2BAAA,YAAA;AAAA,MAAA,KAAA,GAWvD,IAXuD,CAAA,KAAA;AAAA,MAAA,qBAAA,GAWvD,IAXuD,CAAA,qBAAA;AAAA,MAAA,mBAAA,GAWvD,IAXuD,CAAA,mBAAA;AAAA,MAAA,qBAAA,GAWvD,IAXuD,CAAA,qBAAA;AAAA,MAU3DC,sBAV2D,GAWvD,IAXuD,CAU3DA,sBAV2D;AAY3D,MAAMC,OAAO,GAAGC,eAAe,CAA/B,KAA+B,CAA/B;AAEA,MAAMC,MAAM,GAAGC,SAAS,CAAC;AAAA,WAAO;AAC9BC,MAAAA,SAAS,EAAE;AACTC,QAAAA,gBAAgB,EAAE;AADT,OADmB;AAI9BC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,aAAa,EADG,KAAA;AAEhBC,QAAAA,UAAU,EAFM,QAAA;AAGhBC,QAAAA,eAAe,EAAE;AAHD,OAJY;AAS9BC,MAAAA,cAAc,EAAE;AACdC,QAAAA,IAAI,EAAE;AADQ,OATc;AAY9BC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,SAAS,EAAE;AADK,OAZY;AAe9BC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,WAAW,EAAE;AADI;AAfW,KAAP;AAAA,GAAD,CAAxB;AAoBA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAACb,MAAM,CAAP,SAAA,EAAA,KAAA;AAAb,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAACA,MAAM,CAAP,gBAAA,EAAA,qBAAA;AAAb,GAAA,EACG,CAAC,CAAD,OAAA,IACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAACA,MAAM,CAAP,gBAAA,EAAA,qBAAA;AAAb,GAAA,EACG,OAAA,OAAA,KAAA,UAAA,GAAgCc,OAAO,CAAC;AAAElB,IAAAA,KAAK,EAAEE,OAAO,CAAhB,IAAA;AAAuBiB,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAAvC,GAHP,OAEI,CAFJ,EAME,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAACf,MAAM,CAAP,cAAA,EAAA,mBAAA;AAAb,GAAA,EACG,OAAA,KAAA,KAAA,QAAA,GACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,OAAO,EAAb,WAAA;AAA0B,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAAEE,OAAO,CAACkB;AAAjB;AAAjC,GAAA,EADD,KACC,CADD,GAPL,KAME,CANF,EAeG,CAAC,CAAD,QAAA,IACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAAChB,MAAM,CAAP,iBAAA,EAAA,sBAAA;AAAb,GAAA,EACG,OAAA,QAAA,KAAA,UAAA,GAAiCiB,QAAQ,CAAC;AAAErB,IAAAA,KAAK,EAAEE,OAAO,CAAhB,IAAA;AAAuBiB,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAAzC,GAlBT,QAiBM,CAhBJ,CADF,EAsBG,OAAA,OAAA,KAAA,SAAA,GAA+BpB,OAAO,IAAI,KAAA,CAAA,aAAA,CAAA,OAAA,EAA1C,IAA0C,CAA1C,GAvBL,OACE,CADF;AAlCF,CAAA;;AA8DA,eAAA,iBAAA","sourcesContent":["import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BackdropSubheaderProps {\n  title?: string | React.ReactElement;\n\n  leading?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  trailing?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  divider?: boolean | React.ReactElement;\n\n  color?: Color;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  titleContainerStyle?: StyleProp<ViewStyle>;\n\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst BackdropSubheader: React.FC<BackdropSubheaderProps> = ({\n  title,\n  leading,\n  trailing,\n  divider = true,\n  color = 'on-surface',\n  style,\n  contentContainerStyle,\n  titleContainerStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n}) => {\n  const palette = usePaletteColor(color);\n\n  const styles = useStyles(() => ({\n    container: {\n      marginHorizontal: 16,\n    },\n    contentContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingVertical: 12,\n    },\n    titleContainer: {\n      flex: 1,\n    },\n    leadingContainer: {\n      marginEnd: 16,\n    },\n    trailingContainer: {\n      marginStart: 16,\n    },\n  }));\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {!!leading && (\n          <View style={[styles.leadingContainer, leadingContainerStyle]}>\n            {typeof leading === 'function' ? leading({ color: palette.main, size: 24 }) : leading}\n          </View>\n        )}\n        <View style={[styles.titleContainer, titleContainerStyle]}>\n          {typeof title === 'string' ? (\n            <Text variant=\"subtitle1\" style={{ color: palette.main }}>\n              {title}\n            </Text>\n          ) : (\n            title\n          )}\n        </View>\n        {!!trailing && (\n          <View style={[styles.trailingContainer, trailingContainerStyle]}>\n            {typeof trailing === 'function' ? trailing({ color: palette.main, size: 24 }) : trailing}\n          </View>\n        )}\n      </View>\n      {typeof divider === 'boolean' ? divider && <Divider /> : divider}\n    </View>\n  );\n};\n\nexport default BackdropSubheader;\n"]},"metadata":{},"sourceType":"module"}