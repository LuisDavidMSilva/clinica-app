{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Divider from \"./Divider\";\nimport Text from \"./Text\";\nimport Pressable from \"./Pressable\";\nimport { useSurfaceScale } from \"./hooks/use-surface-scale\";\n\nvar ListItem = function ListItem(_ref) {\n  var title = _ref.title,\n      secondaryText = _ref.secondaryText,\n      overline = _ref.overline,\n      meta = _ref.meta,\n      _ref$leadingMode = _ref.leadingMode,\n      leadingMode = _ref$leadingMode === void 0 ? 'icon' : _ref$leadingMode,\n      leading = _ref.leading,\n      trailing = _ref.trailing,\n      pressEffect = _ref.pressEffect,\n      pressEffectColor = _ref.pressEffectColor,\n      onPress = _ref.onPress,\n      onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      onLongPress = _ref.onLongPress,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      delayLongPress = _ref.delayLongPress,\n      disabled = _ref.disabled,\n      hitSlop = _ref.hitSlop,\n      pressRetentionOffset = _ref.pressRetentionOffset,\n      android_disableSound = _ref.android_disableSound,\n      android_ripple = _ref.android_ripple,\n      testOnly_pressed = _ref.testOnly_pressed;\n  var scale = useSurfaceScale();\n  return React.createElement(Pressable, {\n    style: {\n      backgroundColor: scale(0).hex()\n    },\n    pressEffect: pressEffect,\n    pressEffectColor: pressEffectColor,\n    onPress: onPress,\n    onPressIn: onPressIn,\n    onPressOut: onPressOut,\n    onLongPress: onLongPress,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    delayLongPress: delayLongPress,\n    disabled: disabled,\n    hitSlop: hitSlop,\n    pressRetentionOffset: pressRetentionOffset,\n    android_disableSound: android_disableSound,\n    android_ripple: android_ripple,\n    testOnly_pressed: testOnly_pressed\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginVertical: 12\n    }\n  }, leading && React.createElement(View, {\n    style: {\n      width: leadingMode === 'icon' ? 24 : leadingMode === 'avatar' ? 56 : 100,\n      height: leadingMode === 'icon' ? 24 : leadingMode === 'avatar' ? 56 : 56,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginStart: leadingMode === 'image' ? 0 : 16\n    }\n  }, leading), React.createElement(View, {\n    style: {\n      flex: 1,\n      marginHorizontal: 16\n    }\n  }, overline && React.createElement(Text, {\n    selectable: false,\n    variant: \"overline\",\n    style: {\n      marginBottom: 2,\n      color: scale(0.6).hex()\n    }\n  }, overline), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, title && React.createElement(Text, {\n    selectable: false,\n    variant: \"subtitle1\",\n    style: {\n      color: scale(0.87).hex()\n    }\n  }, title), meta && React.createElement(Text, {\n    selectable: false,\n    variant: \"caption\",\n    style: {\n      color: scale(0.87).hex()\n    }\n  }, meta)), secondaryText && React.createElement(Text, {\n    selectable: false,\n    variant: \"body2\",\n    style: {\n      marginTop: 4,\n      color: scale(0.6).hex()\n    }\n  }, secondaryText)), trailing && React.createElement(View, {\n    style: {\n      width: 24,\n      height: 24,\n      marginEnd: 16,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, typeof trailing === 'function' ? trailing({\n    color: scale(0.87).hex(),\n    size: 24\n  }) : trailing)), React.createElement(Divider, {\n    leadingInset: leading ? leadingMode === 'icon' ? 56 : leadingMode === 'avatar' ? 88 : 116 : 16\n  }));\n};\n\nexport default ListItem;","map":{"version":3,"sources":["ListItem.tsx"],"names":["ListItem","leadingMode","testOnly_pressed","scale","useSurfaceScale","backgroundColor","flexDirection","alignItems","marginVertical","leading","width","height","justifyContent","marginStart","flex","marginHorizontal","overline","marginBottom","color","title","meta","secondaryText","marginTop","trailing","marginEnd","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport Divider from './Divider';\nimport Text from './Text';\nimport type { SurfaceProps } from './Surface';\nimport Pressable, { PressableProps } from './Pressable';\nimport { useSurfaceScale } from './hooks/use-surface-scale';\n\nexport interface ListItemProps extends Omit<SurfaceProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  title?: string;\n\n  secondaryText?: string;\n\n  overline?: string;\n\n  meta?: string;\n\n  leadingMode?: 'icon' | 'avatar' | 'image';\n\n  leading?: React.ReactElement;\n\n  trailing?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n}\n\nconst ListItem: React.FC<ListItemProps> = ({\n  title,\n  secondaryText,\n  overline,\n  meta,\n  leadingMode = 'icon',\n  leading,\n  trailing,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n}) => {\n  const scale = useSurfaceScale();\n\n  return (\n    <Pressable\n      style={{ backgroundColor: scale(0).hex() }}\n      pressEffect={pressEffect}\n      pressEffectColor={pressEffectColor}\n      onPress={onPress}\n      onPressIn={onPressIn}\n      onPressOut={onPressOut}\n      onLongPress={onLongPress}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      delayLongPress={delayLongPress}\n      disabled={disabled}\n      hitSlop={hitSlop}\n      pressRetentionOffset={pressRetentionOffset}\n      android_disableSound={android_disableSound}\n      android_ripple={android_ripple}\n      testOnly_pressed={testOnly_pressed}\n    >\n      <View style={{ flexDirection: 'row', alignItems: 'center', marginVertical: 12 }}>\n        {leading && (\n          <View\n            style={{\n              width: leadingMode === 'icon' ? 24 : leadingMode === 'avatar' ? 56 : 100,\n              height: leadingMode === 'icon' ? 24 : leadingMode === 'avatar' ? 56 : 56,\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginStart: leadingMode === 'image' ? 0 : 16,\n            }}\n          >\n            {leading}\n          </View>\n        )}\n        <View style={{ flex: 1, marginHorizontal: 16 }}>\n          {overline && (\n            <Text selectable={false} variant=\"overline\" style={{ marginBottom: 2, color: scale(0.6).hex() }}>\n              {overline}\n            </Text>\n          )}\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n            {title && (\n              <Text selectable={false} variant=\"subtitle1\" style={{ color: scale(0.87).hex() }}>\n                {title}\n              </Text>\n            )}\n            {meta && (\n              <Text selectable={false} variant=\"caption\" style={{ color: scale(0.87).hex() }}>\n                {meta}\n              </Text>\n            )}\n          </View>\n          {secondaryText && (\n            <Text selectable={false} variant=\"body2\" style={{ marginTop: 4, color: scale(0.6).hex() }}>\n              {secondaryText}\n            </Text>\n          )}\n        </View>\n        {trailing && (\n          <View\n            style={{\n              width: 24,\n              height: 24,\n              marginEnd: 16,\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            {typeof trailing === 'function' ? trailing({ color: scale(0.87).hex(), size: 24 }) : trailing}\n          </View>\n        )}\n      </View>\n      <Divider leadingInset={leading ? (leadingMode === 'icon' ? 56 : leadingMode === 'avatar' ? 88 : 116) : 16} />\n    </Pressable>\n  );\n};\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}