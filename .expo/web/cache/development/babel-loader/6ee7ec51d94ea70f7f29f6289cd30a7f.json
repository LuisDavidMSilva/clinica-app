{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"./Text\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\nimport { useStyles } from \"./hooks/use-styles\";\n\nvar Avatar = function Avatar(_ref) {\n  var label = _ref.label,\n      image = _ref.image,\n      icon = _ref.icon,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 56 : _ref$size,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'secondary' : _ref$color,\n      tintColor = _ref.tintColor,\n      _ref$initials = _ref.initials,\n      initials = _ref$initials === void 0 ? true : _ref$initials,\n      _ref$uppercase = _ref.uppercase,\n      uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,\n      _ref$autoColor = _ref.autoColor,\n      autoColor = _ref$autoColor === void 0 ? false : _ref$autoColor,\n      style = _ref.style,\n      contentContainerStyle = _ref.contentContainerStyle,\n      imageContainerStyle = _ref.imageContainerStyle,\n      labelStyle = _ref.labelStyle,\n      imageStyle = _ref.imageStyle;\n  var palette = usePaletteColor(autoColor ? getColor(typeof label === 'string' ? label : '') : color, tintColor);\n  var styles = useStyles(function () {\n    return {\n      container: {\n        width: size,\n        height: size,\n        backgroundColor: palette.main,\n        borderRadius: size / 2\n      },\n      contentContainer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n        justifyContent: 'center',\n        alignItems: 'center'\n      }),\n      label: {\n        fontSize: size / 2,\n        color: palette.on,\n        textTransform: uppercase ? 'uppercase' : 'none'\n      },\n      image: {\n        width: size,\n        height: size,\n        borderRadius: size / 2\n      }\n    };\n  }, [size, uppercase, palette]);\n\n  var getLabel = function getLabel() {\n    switch (typeof label) {\n      case 'string':\n        return React.createElement(Text, {\n          variant: \"h6\",\n          style: [styles.label, labelStyle]\n        }, initials ? getInitials(label) : label);\n\n      case 'function':\n        return label({\n          color: palette.on\n        });\n\n      default:\n        return label;\n    }\n  };\n\n  var getImage = function getImage() {\n    if (!image || React.isValidElement(image)) return image;\n    if (typeof image === 'function') return image({\n      size: size\n    });\n    return React.createElement(Image, {\n      source: image,\n      style: [styles.image, imageStyle]\n    });\n  };\n\n  var getIcon = function getIcon() {\n    if (typeof icon === 'function') return icon({\n      color: palette.on,\n      size: size / 2\n    });\n    return icon;\n  };\n\n  return React.createElement(View, {\n    style: [styles.container, style]\n  }, (label || icon) && React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, label ? getLabel() : icon && getIcon()), image && React.createElement(View, {\n    style: [StyleSheet.absoluteFillObject, imageContainerStyle]\n  }, getImage()));\n};\n\nfunction getColor(label) {\n  var hash = 0;\n  var i;\n\n  for (i = 0; i < label.length; i += 1) {\n    hash = label.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  var color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    var value = hash >> i * 8 & 0xff;\n    color += (\"00\" + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\nfunction getInitials(label) {\n  var namesArray = label.trim().split(' ');\n  if (namesArray.length === 1) return \"\" + namesArray[0].charAt(0);else return \"\" + namesArray[0].charAt(0) + namesArray[namesArray.length - 1].charAt(0);\n}\n\nexport default Avatar;","map":{"version":3,"sources":["Avatar.tsx"],"names":["Avatar","size","color","initials","uppercase","autoColor","imageStyle","palette","usePaletteColor","getColor","styles","useStyles","container","width","height","backgroundColor","borderRadius","contentContainer","StyleSheet","justifyContent","alignItems","label","fontSize","textTransform","image","getLabel","getInitials","on","getImage","React","getIcon","icon","hash","i","value","namesArray"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Image,\n  ImageSourcePropType,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Text from './Text';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface AvatarProps {\n  label?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  image?: ImageSourcePropType | React.ReactElement | ((props: { size: number }) => React.ReactElement | null) | null;\n\n  icon?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  size?: number;\n\n  color?: Color;\n\n  tintColor?: Color;\n\n  initials?: boolean;\n\n  uppercase?: boolean;\n\n  autoColor?: boolean;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  imageContainerStyle?: StyleProp<ViewStyle>;\n\n  labelStyle?: StyleProp<TextStyle>;\n\n  imageStyle?: StyleProp<ImageStyle>;\n}\n\nconst Avatar: React.FC<AvatarProps> = ({\n  label,\n  image,\n  icon,\n  size = 56,\n  color = 'secondary',\n  tintColor,\n  initials = true,\n  uppercase = true,\n  autoColor = false,\n  style,\n  contentContainerStyle,\n  imageContainerStyle,\n  labelStyle,\n  imageStyle,\n}) => {\n  const palette = usePaletteColor(autoColor ? getColor(typeof label === 'string' ? label : '') : color, tintColor);\n\n  const styles = useStyles(\n    () => ({\n      container: {\n        width: size,\n        height: size,\n        backgroundColor: palette.main,\n        borderRadius: size / 2,\n      },\n      contentContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      label: {\n        fontSize: size / 2,\n        color: palette.on,\n        textTransform: uppercase ? 'uppercase' : 'none',\n      },\n      image: {\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n      },\n    }),\n    [size, uppercase, palette]\n  );\n\n  const getLabel = () => {\n    switch (typeof label) {\n      case 'string':\n        return (\n          <Text variant=\"h6\" style={[styles.label, labelStyle]}>\n            {initials ? getInitials(label) : label}\n          </Text>\n        );\n      case 'function':\n        return label({ color: palette.on });\n      default:\n        return label;\n    }\n  };\n\n  const getImage = () => {\n    if (!image || React.isValidElement(image)) return image;\n    if (typeof image === 'function') return image({ size });\n    return <Image source={image} style={[styles.image, imageStyle]} />;\n  };\n\n  const getIcon = () => {\n    if (typeof icon === 'function') return icon({ color: palette.on, size: size / 2 });\n    return icon;\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      {(label || icon) && (\n        <View style={[styles.contentContainer, contentContainerStyle]}>{label ? getLabel() : icon && getIcon()}</View>\n      )}\n      {image && <View style={[StyleSheet.absoluteFillObject, imageContainerStyle]}>{getImage()}</View>}\n    </View>\n  );\n};\n\nfunction getColor(label: string) {\n  let hash = 0;\n  let i;\n  for (i = 0; i < label.length; i += 1) {\n    hash = label.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  return color;\n}\n\nfunction getInitials(label: string) {\n  const namesArray = label.trim().split(' ');\n  if (namesArray.length === 1) return `${namesArray[0].charAt(0)}`;\n  else return `${namesArray[0].charAt(0)}${namesArray[namesArray.length - 1].charAt(0)}`;\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}