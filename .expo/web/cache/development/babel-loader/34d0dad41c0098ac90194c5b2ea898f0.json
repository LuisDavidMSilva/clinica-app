{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport var PortalContext = createContext(null);\nexport var usePortalContext = function usePortalContext() {\n  var portal = useContext(PortalContext);\n\n  if (!portal) {\n    throw new Error('usePortalContext must be used within a PortalContext');\n  }\n\n  return portal;\n};\nexport var PortalProvider = function PortalProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      portals = _useState2[0],\n      setPortals = _useState2[1];\n\n  return React.createElement(PortalContext.Provider, {\n    value: {\n      portals: portals,\n      setPortals: setPortals\n    }\n  }, children);\n};\nexport var Outlet = function Outlet() {\n  var _usePortalContext = usePortalContext(),\n      portals = _usePortalContext.portals;\n\n  return React.createElement(React.Fragment, null, portals.map(function (_ref2) {\n    var key = _ref2.key,\n        children = _ref2.children;\n    return React.createElement(View, {\n      key: key,\n      pointerEvents: \"box-none\",\n      style: StyleSheet.absoluteFill\n    }, children);\n  }));\n};\nexport var Portal = function Portal(_ref3) {\n  var key = _ref3.key,\n      children = _ref3.children;\n\n  var _usePortalContext2 = usePortalContext(),\n      setPortals = _usePortalContext2.setPortals;\n\n  var _key = useMemo(function () {\n    return key !== null && key !== void 0 ? key : \"\" + (Date.now() + Math.random());\n  }, [key]);\n\n  useEffect(function () {\n    setPortals(function (portals) {\n      return [].concat(_toConsumableArray(portals), [{\n        key: _key,\n        children: children\n      }]);\n    });\n    return function () {\n      setPortals(function (portals) {\n        return portals.filter(function (p) {\n          return p.key !== _key;\n        });\n      });\n    };\n  }, [_key, setPortals, children]);\n  return null;\n};","map":{"version":3,"sources":["PortalContext.tsx"],"names":["PortalContext","createContext","usePortalContext","portal","useContext","PortalProvider","children","useState","portals","setPortals","Outlet","StyleSheet","absoluteFill","Portal","_key","useMemo","key","Date","Math","useEffect","p"],"mappings":";;AAAA,OAAA,KAAA,IAAA,aAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA,EAAA,QAAA,QAAA,OAAA;;;AAGA,OAAO,IAAMA,aAAa,GAAGC,aAAa,CAAnC,IAAmC,CAAnC;AAKP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,MAAMC,MAAM,GAAGC,UAAU,CAAzB,aAAyB,CAAzB;;AACA,MAAI,CAAJ,MAAA,EAAa;AACX,UAAM,IAAA,KAAA,CAAN,sDAAM,CAAN;AACD;;AACD,SAAA,MAAA;AALK,CAAA;AAQP,OAAO,IAAMC,cAAwB,GAAG,SAA3BA,cAA2B,CAAA,IAAA,EAAkB;AAAjB,MAAEC,QAAF,GAAiB,IAAjB,CAAEA,QAAF;;AACvC,kBAA8BC,QAAQ,CAAtC,EAAsC,CAAtC;AAAA;AAAA,MAAM,OAAN;AAAA,MAAM,UAAN;;AAEA,SAAO,KAAA,CAAA,aAAA,CAAC,aAAD,CAAA,QAAA,EAAA;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAF,EAAEA,OAAF;AAAWC,MAAAA,UAAAA,EAAAA;AAAX;AAA/B,GAAA,EAAP,QAAO,CAAP;AAHK,CAAA;AAMP,OAAO,IAAMC,MAAgB,GAAG,SAAnBA,MAAmB,GAAM;AACpC,0BAAoBR,gBAApB,EAAA;AAAA,MAAQM,OAAR,qBAAQA,OAAR;;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EACG,OAAO,CAAP,GAAA,CAAY,UAAA,KAAA,EAAA;AAAA,QAAC,GAAD,GAAA,KAAA,CAAC,GAAD;AAAA,QAAQF,QAAR,GAAA,KAAA,CAAQA,QAAR;AAAA,WACX,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,GAAG,EAAT,GAAA;AAAgB,MAAA,aAAa,EAA7B,UAAA;AAAyC,MAAA,KAAK,EAAEK,UAAU,CAACC;AAA3D,KAAA,EADW,QACX,CADW;AAFjB,GAEK,CADH,CADF;AAHK,CAAA;AAoBP,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,CAAA,KAAA,EAAuB;AAAtB,MAAA,GAAA,GAAsB,KAAtB,CAAA,GAAA;AAAA,MAAOP,QAAP,GAAsB,KAAtB,CAAOA,QAAP;;AAC5C,2BAAuBJ,gBAAvB,EAAA;AAAA,MAAQO,UAAR,sBAAQA,UAAR;;AAEA,MAAMK,IAAI,GAAGC,OAAO,CAAC;AAAA,WAAMC,GAAN,KAAA,IAAMA,IAAAA,GAAN,KAAA,KAAA,CAAMA,GAAN,GAAMA,SAAUC,IAAI,CAAJA,GAAAA,KAAaC,IAAI,CAAlC,MAA8BA,EAAvBF,CAAN;AAAA,GAAD,EAA+C,CAAnE,GAAmE,CAA/C,CAApB;;AAEAG,EAAAA,SAAS,CAAC,YAAM;AACdV,IAAAA,UAAU,CAAED,UAAAA,OAAD;AAAA,0CAAa,OAAb,IAA0B;AAAEQ,QAAAA,GAAG,EAAL,IAAA;AAAaV,QAAAA,QAAAA,EAAAA;AAAb,OAA1B;AAAA,KAAD,CAAVG;AAEA,WAAO,YAAM;AACXA,MAAAA,UAAU,CAAED,UAAAA,OAAD;AAAA,eAAaA,OAAO,CAAPA,MAAAA,CAAgBY,UAAAA,CAAD;AAAA,iBAAOA,CAAC,CAADA,GAAAA,KAA9CX,IAAuC;AAAA,SAAfD,CAAb;AAAA,OAAD,CAAVC;AADF,KAAA;AAHO,GAAA,EAMN,CAAA,IAAA,EAAA,UAAA,EANHU,QAMG,CANM,CAATA;AAQA,SAAA,IAAA;AAbK,CAAA","sourcesContent":["import React, { createContext, Dispatch, SetStateAction, useContext, useEffect, useMemo, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport const PortalContext = createContext<{\n  portals: PortalProps[];\n  setPortals: Dispatch<SetStateAction<PortalProps[]>>;\n} | null>(null);\n\nexport const usePortalContext = () => {\n  const portal = useContext(PortalContext);\n  if (!portal) {\n    throw new Error('usePortalContext must be used within a PortalContext');\n  }\n  return portal;\n};\n\nexport const PortalProvider: React.FC = ({ children }) => {\n  const [portals, setPortals] = useState<PortalProps[]>([]);\n\n  return <PortalContext.Provider value={{ portals, setPortals }}>{children}</PortalContext.Provider>;\n};\n\nexport const Outlet: React.FC = () => {\n  const { portals } = usePortalContext();\n\n  return (\n    <React.Fragment>\n      {portals.map(({ key, children }) => (\n        <View key={key} pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n          {children}\n        </View>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport interface PortalProps {\n  key?: React.Key;\n\n  children?: React.ReactNode;\n}\n\nexport const Portal: React.FC<PortalProps> = ({ key, children }) => {\n  const { setPortals } = usePortalContext();\n\n  const _key = useMemo(() => key ?? `${Date.now() + Math.random()}`, [key]);\n\n  useEffect(() => {\n    setPortals((portals) => [...portals, { key: _key, children }]);\n\n    return () => {\n      setPortals((portals) => portals.filter((p) => p.key !== _key));\n    };\n  }, [_key, setPortals, children]);\n\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}