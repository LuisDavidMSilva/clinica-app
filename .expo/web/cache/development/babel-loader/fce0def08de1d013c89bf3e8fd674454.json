{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"variant\", \"title\", \"subtitle\", \"centerTitle\", \"leading\", \"trailing\", \"color\", \"tintColor\", \"transparent\", \"enableColorOnDark\", \"style\", \"contentContainerStyle\", \"titleContentStyle\", \"titleStyle\", \"subtitleStyle\", \"leadingContainerStyle\", \"trailingContainerStyle\", \"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Surface from \"./Surface\";\nimport Text from \"./Text\";\nimport { useSurfaceColorValue } from \"./hooks/use-surface-color\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\nimport { useTheme } from \"./base/ThemeContext\";\n\nvar AppBar = function AppBar(_ref) {\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'top' : _ref$variant,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      _ref$centerTitle = _ref.centerTitle,\n      centerTitle = _ref$centerTitle === void 0 ? false : _ref$centerTitle,\n      leading = _ref.leading,\n      trailing = _ref.trailing,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      tintColor = _ref.tintColor,\n      _ref$transparent = _ref.transparent,\n      transparent = _ref$transparent === void 0 ? false : _ref$transparent,\n      _ref$enableColorOnDar = _ref.enableColorOnDark,\n      enableColorOnDark = _ref$enableColorOnDar === void 0 ? false : _ref$enableColorOnDar,\n      style = _ref.style,\n      contentContainerStyle = _ref.contentContainerStyle,\n      titleContentStyle = _ref.titleContentStyle,\n      titleStyle = _ref.titleStyle,\n      subtitleStyle = _ref.subtitleStyle,\n      leadingContainerStyle = _ref.leadingContainerStyle,\n      trailingContainerStyle = _ref.trailingContainerStyle,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useTheme();\n  var surfaceColor = useSurfaceColorValue(variant === 'top' ? 4 : 8);\n  var palette = usePaletteColor(theme.colorScheme === 'dark' && !enableColorOnDark ? surfaceColor : color, tintColor);\n  var titleElement = typeof title === 'string' ? React.createElement(Text, {\n    variant: \"h6\",\n    style: [{\n      color: palette.on\n    }, titleStyle]\n  }, title) : typeof title === 'function' ? title({\n    color: palette.on\n  }) : title;\n  var subtitleElement = typeof subtitle === 'string' ? React.createElement(Text, {\n    variant: \"caption\",\n    style: [{\n      color: palette.on\n    }, subtitleStyle]\n  }, subtitle) : typeof subtitle === 'function' ? subtitle({\n    color: palette.on\n  }) : subtitle;\n  var leadingElement = typeof leading === 'function' ? leading({\n    color: palette.on,\n    size: 24\n  }) : leading;\n  var trailingElement = typeof trailing === 'function' ? trailing({\n    color: palette.on,\n    size: 24\n  }) : trailing;\n  return React.createElement(Surface, _extends({\n    style: [{\n      backgroundColor: transparent ? 'transparent' : palette.main,\n      zIndex: variant === 'top' ? 4 : 8\n    }, style],\n    elevation: transparent ? 0 : variant === 'top' ? 4 : 8\n  }, props), React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, leadingElement && React.createElement(View, {\n    style: [styles.leadingContainer, leadingContainerStyle]\n  }, leadingElement), React.createElement(View, {\n    style: [centerTitle ? [StyleSheet.absoluteFill, styles.centeredTitleContainer] : styles.titleContainer, titleContentStyle],\n    pointerEvents: centerTitle ? 'none' : undefined\n  }, titleElement, subtitleElement), trailingElement && React.createElement(View, {\n    style: [styles.trailingContainer, trailingContainerStyle]\n  }, trailingElement)), children);\n};\n\nvar styles = StyleSheet.create({\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: Platform.select({\n      ios: 44,\n      web: 64,\n      default: 56\n    }),\n    paddingHorizontal: 16\n  },\n  leadingContainer: {\n    marginStart: -12,\n    marginEnd: 20\n  },\n  trailingContainer: {\n    marginStart: 20,\n    marginEnd: -12\n  },\n  titleContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  centeredTitleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default AppBar;","map":{"version":3,"sources":["AppBar.tsx"],"names":["AppBar","variant","centerTitle","color","transparent","enableColorOnDark","props","theme","useTheme","surfaceColor","useSurfaceColorValue","palette","usePaletteColor","titleElement","on","title","subtitleElement","subtitle","leadingElement","leading","size","trailingElement","trailing","backgroundColor","zIndex","styles","StyleSheet","undefined","contentContainer","flexDirection","justifyContent","alignItems","height","ios","web","default","paddingHorizontal","leadingContainer","marginStart","marginEnd","trailingContainer","titleContainer","flex","centeredTitleContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Platform, StyleProp, StyleSheet, TextStyle, View, ViewStyle } from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Text from './Text';\nimport { useSurfaceColorValue } from './hooks/use-surface-color';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface AppBarProps extends SurfaceProps {\n  /**\n   * Whether you want to place the AppBar at the top or the bottom of the screen.\n   *\n   * @default \"top\"\n   */\n  variant?: 'top' | 'bottom';\n\n  /**\n   * The primary text to display in the AppBar.\n   */\n  title?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The secondary text to display in the AppBar.\n   */\n  subtitle?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * Whether the `title` and `subtitle` should be centered.\n   *\n   * @default false\n   */\n  centerTitle?: boolean;\n\n  /**\n   * The element displayed before the `title`.\n   */\n  leading?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The element displayed after the `title`.\n   */\n  trailing?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The fill color of the AppBar's background.\n   *\n   * @default \"primary\"\n   */\n  color?: Color;\n\n  /**\n   * The color of the AppBar's content (title, subtitle, icons, etc.).\n   */\n  tintColor?: Color;\n\n  /**\n   * Whether the AppBar's background is transparent.\n   *\n   * @default false\n   */\n  transparent?: boolean;\n\n  /**\n   * If `true`, the `color` prop will be applied in dark mode.\n   *\n   * @default false\n   */\n  enableColorOnDark?: boolean;\n\n  /**\n   * The style of the content container view.\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the title and subtitle container view.\n   */\n  titleContentStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the title text.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the subtitle text.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the leading element container view.\n   */\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the trailing element container view.\n   */\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst AppBar: React.FC<AppBarProps> = ({\n  variant = 'top',\n  title,\n  subtitle,\n  centerTitle = false,\n  leading,\n  trailing,\n  color = 'primary',\n  tintColor,\n  transparent = false,\n  enableColorOnDark = false,\n  style,\n  contentContainerStyle,\n  titleContentStyle,\n  titleStyle,\n  subtitleStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n  children,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const surfaceColor = useSurfaceColorValue(variant === 'top' ? 4 : 8);\n\n  const palette = usePaletteColor(theme.colorScheme === 'dark' && !enableColorOnDark ? surfaceColor : color, tintColor);\n\n  const titleElement =\n    typeof title === 'string' ? (\n      <Text variant=\"h6\" style={[{ color: palette.on }, titleStyle]}>\n        {title}\n      </Text>\n    ) : typeof title === 'function' ? (\n      title({ color: palette.on })\n    ) : (\n      title\n    );\n\n  const subtitleElement =\n    typeof subtitle === 'string' ? (\n      <Text variant=\"caption\" style={[{ color: palette.on }, subtitleStyle]}>\n        {subtitle}\n      </Text>\n    ) : typeof subtitle === 'function' ? (\n      subtitle({ color: palette.on })\n    ) : (\n      subtitle\n    );\n\n  const leadingElement = typeof leading === 'function' ? leading({ color: palette.on, size: 24 }) : leading;\n\n  const trailingElement = typeof trailing === 'function' ? trailing({ color: palette.on, size: 24 }) : trailing;\n\n  return (\n    <Surface\n      style={[\n        {\n          backgroundColor: transparent ? 'transparent' : palette.main,\n          zIndex: variant === 'top' ? 4 : 8,\n        },\n        style,\n      ]}\n      elevation={transparent ? 0 : variant === 'top' ? 4 : 8}\n      {...props}\n    >\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {leadingElement && <View style={[styles.leadingContainer, leadingContainerStyle]}>{leadingElement}</View>}\n        <View\n          style={[\n            centerTitle ? [StyleSheet.absoluteFill, styles.centeredTitleContainer] : styles.titleContainer,\n            titleContentStyle,\n          ]}\n          pointerEvents={centerTitle ? 'none' : undefined}\n        >\n          {titleElement}\n          {subtitleElement}\n        </View>\n        {trailingElement && <View style={[styles.trailingContainer, trailingContainerStyle]}>{trailingElement}</View>}\n      </View>\n      {children}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: Platform.select({ ios: 44, web: 64, default: 56 }),\n    paddingHorizontal: 16,\n  },\n  leadingContainer: {\n    marginStart: -12,\n    marginEnd: 20,\n  },\n  trailingContainer: {\n    marginStart: 20,\n    marginEnd: -12,\n  },\n  titleContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  centeredTitleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AppBar;\n"]},"metadata":{},"sourceType":"module"}