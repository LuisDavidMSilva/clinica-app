{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Box, Button, TextInput } from '@react-native-material/core';\nimport { Input, Block } from 'galio-framework';\nimport { useState } from 'react';\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignIn = function SignIn() {\n  var _useState = useState('admin@admin.com'),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState('12345678'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useAuth = useAuth(),\n      signIn = _useAuth.signIn;\n\n  var handleSubmit = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(signIn({\n              email: email,\n              password: password\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Block, {\n    children: _jsxs(Box, {\n      w: '100%',\n      h: '100%',\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingHorizontal: 32\n      },\n      children: [_jsx(TextInput, {\n        variant: \"outlined\",\n        label: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: {\n          width: '100%',\n          marginVertical: 16\n        }\n      }), _jsx(TextInput, {\n        variant: \"outlined\",\n        label: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        secureTextEntry: true,\n        style: {\n          width: '100%',\n          marginVertical: 16\n        }\n      }), _jsx(Input, {\n        placeholder: \"password\",\n        password: true,\n        viewPass: true\n      }), _jsx(Button, {\n        variant: \"contained\",\n        title: \"Entrar\",\n        onPress: handleSubmit,\n        style: {\n          width: '100%',\n          marginVertical: 16\n        }\n      })]\n    })\n  });\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/willsouza/Projetos/clinica-app/src/views/Signin/index.tsx"],"names":["Box","Button","TextInput","Input","Block","useState","useAuth","SignIn","email","setEmail","password","setPassword","signIn","handleSubmit","flex","alignItems","justifyContent","paddingHorizontal","text","width","marginVertical"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,iBAA7B;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,kBAA0BF,QAAQ,CAAC,iBAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCJ,QAAQ,CAAC,UAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,iBAAmBL,OAAO,EAA1B;AAAA,MAAQM,MAAR,YAAQA,MAAR;;AAEA,MAAMC,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACbD,MAAM,CAAC;AAAEJ,cAAAA,KAAK,EAALA,KAAF;AAASE,cAAAA,QAAQ,EAARA;AAAT,aAAD,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,SACE,KAAC,KAAD;AAAA,cACE,MAAC,GAAD;AACE,MAAA,CAAC,EAAE,MADL;AAEE,MAAA,CAAC,EAAE,MAFL;AAGE,MAAA,KAAK,EAAE;AACLI,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,iBAAiB,EAAE;AAJd,OAHT;AAAA,iBAUE,KAAC,SAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,KAAK,EAAET,KAHT;AAIE,QAAA,YAAY,EAAE,sBAACU,IAAD;AAAA,iBAAUT,QAAQ,CAACS,IAAD,CAAlB;AAAA,SAJhB;AAKE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,cAAc,EAAE;AAAjC;AALT,QAVF,EAiBE,KAAC,SAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,KAAK,EAAEV,QAHT;AAIE,QAAA,YAAY,EAAE,sBAACQ,IAAD;AAAA,iBAAUP,WAAW,CAACO,IAAD,CAArB;AAAA,SAJhB;AAKE,QAAA,eAAe,EAAE,IALnB;AAME,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,cAAc,EAAE;AAAjC;AANT,QAjBF,EAyBE,KAAC,KAAD;AAAO,QAAA,WAAW,EAAC,UAAnB;AAA8B,QAAA,QAAQ,MAAtC;AAAuC,QAAA,QAAQ;AAA/C,QAzBF,EA0BE,KAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAEP,YAHX;AAIE,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,cAAc,EAAE;AAAjC;AAJT,QA1BF;AAAA;AADF,IADF;AAqCD,CA/CD;;AAiDA,eAAeb,MAAf","sourcesContent":["import { Box, Button, TextInput } from '@react-native-material/core';\nimport { Input, Block } from 'galio-framework';\n\nimport { useState } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\n\nconst SignIn = () => {\n  const [email, setEmail] = useState('admin@admin.com');\n  const [password, setPassword] = useState('12345678');\n\n  const { signIn } = useAuth();\n\n  const handleSubmit = async () => {\n    await signIn({ email, password });\n  };\n\n  return (\n    <Block>\n      <Box\n        w={'100%'}\n        h={'100%'}\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingHorizontal: 32,\n        }}\n      >\n        <TextInput\n          variant=\"outlined\"\n          label=\"Email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n          style={{ width: '100%', marginVertical: 16 }}\n        />\n        <TextInput\n          variant=\"outlined\"\n          label=\"Password\"\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          secureTextEntry={true}\n          style={{ width: '100%', marginVertical: 16 }}\n        />\n        <Input placeholder=\"password\" password viewPass />\n        <Button\n          variant=\"contained\"\n          title=\"Entrar\"\n          onPress={handleSubmit}\n          style={{ width: '100%', marginVertical: 16 }}\n        />\n      </Box>\n    </Block>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}