{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://clinica-api-for-mobile.herokuapp.com';\nexport var useAxios = function useAxios(axiosParams) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var fetchData = function _callee(params) {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.request(params));\n\n          case 3:\n            result = _context.sent;\n            setResponse(result);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setError(_context.t0);\n\n          case 10:\n            _context.prev = 10;\n            setLoading(false);\n            return _context.finish(10);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7, 10, 13]], Promise);\n  };\n\n  useEffect(function () {\n    fetchData(axiosParams);\n  }, []);\n  return {\n    response: response,\n    error: error,\n    loading: loading\n  };\n};","map":{"version":3,"sources":["/home/willsouza/Projetos/clinica-app/src/hooks/useAxios.ts"],"names":["useState","useEffect","axios","defaults","baseURL","useAxios","axiosParams","response","setResponse","error","setError","loading","setLoading","fetchData","params","request","result"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAKO,OALP;AAOAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,8CAAzB;AAMA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,WAAV,EAAsC;AAC5D,kBAAgCN,QAAQ,CAAU,IAAV,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BR,QAAQ,CAAc,IAAd,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BV,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOW,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,SAAS,GAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEOZ,KAAK,CAACa,OAAN,CAAcD,MAAd,CAFP;;AAAA;AAERE,YAAAA,MAFQ;AAGdR,YAAAA,WAAW,CAACQ,MAAD,CAAX;AAHc;AAAA;;AAAA;AAAA;AAAA;AAKdN,YAAAA,QAAQ,aAAR;;AALc;AAAA;AAOdE,YAAAA,UAAU,CAAC,KAAD,CAAV;AAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAWAX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,SAAS,CAACP,WAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAEC,IAAAA,QAAQ,EAARA,QAAF;AAAYE,IAAAA,KAAK,EAALA,KAAZ;AAAmBE,IAAAA,OAAO,EAAPA;AAAnB,GAAP;AACD,CArBM","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport axios, {\n  AxiosError,\n  AxiosRequestConfig,\n  AxiosResponse,\n  Method,\n} from 'axios';\n\naxios.defaults.baseURL = 'https://clinica-api-for-mobile.herokuapp.com';\n\nexport type AxiosProps = AxiosRequestConfig & {\n  method: Method;\n};\n\nexport const useAxios = <T = any>(axiosParams: AxiosProps) => {\n  const [response, setResponse] = useState<T | any>(null);\n  const [error, setError] = useState<Error | any>(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchData = async (params: AxiosProps) => {\n    try {\n      const result = await axios.request(params);\n      setResponse(result);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(axiosParams);\n  }, []);\n\n  return { response, error, loading };\n};\n"]},"metadata":{},"sourceType":"module"}